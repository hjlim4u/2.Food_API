version: '3.8'

services:
  food-api:
    build: .
    container_name: food-api
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=sqlite+aiosqlite:///./data/food_api.db
      - HOST=0.0.0.0
      - PORT=8000
      - WORKERS=1
    volumes:
      # Mount volume for persistent SQLite database
      - ./data:/app/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import httpx; httpx.get('http://localhost:8000/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: PostgreSQL database for production
  # Uncomment and configure if you want to use PostgreSQL instead of SQLite
  # postgres:
  #   image: postgres:15-alpine
  #   container_name: food-api-db
  #   environment:
  #     POSTGRES_DB: food_api
  #     POSTGRES_USER: foodapi
  #     POSTGRES_PASSWORD: your_secure_password
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   ports:
  #     - "5432:5432"
  #   restart: unless-stopped

  # food-api-postgres:
  #   build: .
  #   container_name: food-api-postgres
  #   ports:
  #     - "8001:8000"
  #   environment:
  #     - DATABASE_URL=postgresql+asyncpg://foodapi:your_secure_password@postgres:5432/food_api
  #     - HOST=0.0.0.0
  #     - PORT=8000
  #     - WORKERS=2
  #   depends_on:
  #     - postgres
  #   restart: unless-stopped

# volumes:
#   postgres_data: